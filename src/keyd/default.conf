# Notes:
#   - The "MARK" comments are for VS Code's minimap
#   - The `#'` and `#"` comments are to close quotes place on the previous line, for correct syntax highlighting

[ids]

*

[global]

overload_tap_timeout = 300

[main]

escape = mute

` = C-A-`
1 = C-A-1
2 = C-A-2
3 = escape
4 = C-A-4
5 = volumedown
6 = playpause
7 = volumeup
8 = delete
9 = backspace
0 = enter
- = sysrq
backspace = mute

tab = overload(tab, tab)
q = b
w = G-q
e = p
r = o
t = G-w
y = z
u = v
i = d
o = l
p = f
[ = m
] = ^
\ = G-p

capslock = leftshift
a = a
s = u
d = i
f = e
g = ,
h = c
j = t
k = s
l = r
; = n
' = rightshift
#'

leftshift = leftcontrol
z = w
x = y
c = x
v = .
b = k
n = '
#'
m = q
, = g
. = h
/ = j

leftmeta = leftalt
leftalt = layer(meta)
rightalt = layer(altgr_)
rightcontrol = compose

# MARK: [shift]
[shift]

g = :
v = ;

# For when keeping Shift down a bit too long while typing `I'm`
n = '
#'

# MARK: [control]
[control]

` = C-`
1 = C-1
2 = C-2
4 = C-4
5 = C-5
6 = C-6
7 = C-7
- = C--
= = C-=

tab = C-tab
q = C-a
w = C-w
e = C-e
r = C-r
t = C-t
y = C-y
u = C-u
i = C-i
o = C-o
p = C-p
[ = C-[
] = C-]
\ = C-\

a = C-a
s = C-s
d = C-d
f = C-f
g = C-g
h = C-h
j = C-j
k = C-k
l = C-l
; = C-;

z = C-z
x = C-x
c = C-c
v = C-v
b = C-b
n = C-n
m = C-m
, = C-,
. = C-.
/ = C-/

# MARK: [alt]
[alt]

` = A-S-tab
1 = A-1
2 = A-2
4 = A-4
5 = A-5
6 = A-6
7 = A-7
- = A--
= = A-=

tab = A-tab
q = A-a
w = A-w
e = A-e
r = A-r
t = A-t
y = A-y
u = A-u
i = A-i
o = A-o
p = A-p
[ = A-[
] = A-]
\ = A-\

a = A-a
s = A-s
d = A-d
f = A-f
g = A-g
h = A-h
j = A-j
k = A-k
l = A-l
; = A-;

z = A-z
x = A-x
c = A-c
v = A-v
b = A-b
n = A-n
m = A-m
, = A-,
. = A-.
/ = A-/

# MARK: [meta]
# `meta` is recognised; if we give another name to this layer,
# we'd need to add `:M` after its new name for the `meta` modifier to keep working
[meta]

` = M-S-tab
8 = C-delete
9 = C-backspace
0 = C-enter

tab = M-tab
q = C-a
w = C-w
e = C-e
r = C-r
t = C-t
y = C-y
u = 7
i = 8
o = 9
p = *
[ = @
] = %
\ = G-[,,,èè

a = oneshot(meta+altgr_)
s = C-s
d = C-d
f = C-f
g = C-g
h = -
j = 4
k = 5
l = 6
; = +

z = C-z
x = C-x
c = C-c
v = C-v
n = G-k
m = 1
, = 2
. = 3
/ = .

space = 0

# MARK: [meta+shift]
[meta+shift]

# We need to specify `g` and `v` in this layer as they are in the `[shift]` layer

u = G-c
i = G-z
o = G-S-c
p = G-d
[ = G-S-d
] = G-S-h

h = G-l
g = C-S-g
j = G-x
k = G-S-z
l = G-S-x
; = G-S-f

v = C-S-v
n = G-S-k
m = G-j
, = G-h
. = G-S-j

space = G-S-f

# MARK:  [altgr_]
# `altgr` would be recognised as a modifier, but we don't need that here, so we add a `_`
# (we don't need the `rightalt down` event; see by running `keyd monitor`)
[altgr_]

3 = capslock
9 = pageup
0 = pagedown

q = &
w = |
e = ?
r = !
u = home
i = up
o = end
\ = G-]

a = G-e
s = G-r
d = -
f = G-t
g = :
h = G-u
j = left
k = down
l = right
; = layer(meta+altgr_)

x = `
c = "
#"
v = ~
n = /
m = =
, = $
. = #

space = _

# MARK: [altgr_+shift]
[altgr_+shift]

e = G-k
r = G-S-k

d = G-l

n = \
, = G-\

# MARK: [altgr_+control]
[altgr_+control]

9 = C-pageup
0 = C-pagedown

u = C-home
i = C-up
o = C-end

j = C-left
k = C-down
l = C-right

# MARK: [altgr_+alt]
[altgr_+alt]

i = A-up
j = A-left
k = A-down
l = A-right

# MARK: [meta+altgr_]
[meta+altgr_]

9 = C-pageup
0 = C-pagedown

q = <
w = >
e = [
r = ]
u = C-home
i = C-up
o = C-end

d = (
f = )
j = C-left
k = C-down
l = C-right

x = {
c = }

# MARK: [meta+altgr_+shift]
[meta+altgr_+shift]

q = G-s
w = G-S-s
e = G-S-i
r = G-S-o
u = C-S-home
i = C-S-up
o = C-S-end

a = G-S-w
s = G-S-r
d = G-S-y
f = G-S-t
h = G-S-u
j = C-S-left
k = C-S-down
l = C-S-right

m = G-S-g

# MARK: [tab]
[tab]

2 = enter
3 = backspace
4 = delete

r = macro(C-A-1 sublime space merge enter)
t = S-f3
u = macro([] left)
i = macro('' left)
o = macro(<> left)

d = C-A-1
f = f2
g = f3

j = macro(() left)
k = macro("" left)
l = macro(=>)

m = macro({} left)
, = macro(`` left)

# MARK: [altgr_+tab]
[altgr_+tab]

u = macro(C-k C-pageup)
i = macro(C-k C-up)
o = macro(C-k C-pagedown)

j = macro(C-k C-left)
k = macro(C-k C-down)
l = macro(C-k C-right)

# MARK: [altgr_+tab+shift]
[altgr_+tab+shift]

u = macro(C-S-pageup)
i = macro(C-k C-S-up)
o = macro(C-S-pagedown)

j = macro(C-k C-S-left)
k = macro(C-k C-S-down)
l = macro(C-k C-S-right)
