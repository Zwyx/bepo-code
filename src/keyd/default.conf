# Notes:
#  - The "MARK" comments are for VS Code's minimap
#  - The `#'` and `#"` comments are to close quotes place on the previous line, for correct syntax highlighting
#  - Some keyboards don't allow every combination of keys, see https://superuser.com/questions/1835927/how-to-get-capslock-shift-x-working-when-it-shows-no-scancode

[ids]

*

[global]

overload_tap_timeout = 300

[main]

# `clearm` on the right is to clear `half` automatically when resuming typing with both hands

escape = mute
delete = mute

` = C-A-`
1 = C-A-1
2 = C-A-2
3 = escape
4 = C-A-4
5 = volumedown
6 = playpause
7 = volumeup
8 = delete
9 = backspace
0 = enter
- = sysrq

tab = overload(tab, tab)
q = b
w = G-q
e = p
r = o
t = G-w
y = clearm(z)
u = clearm(v)
i = clearm(d)
o = clearm(l)
p = clearm(f)
[ = clearm(m)
] = ^
\ = G-p

capslock = leftshift
a = a
s = u
d = i
f = e
g = ,
h = clearm(c)
j = clearm(t)
k = clearm(s)
l = clearm(r)
; = clearm(n)
' = rightshift
#'

leftshift = leftcontrol
z = w
x = y
c = x
v = .
b = k
n = clearm(')
#'
m = clearm(q)
, = clearm(g)
. = clearm(h)
/ = clearm(j)

leftcontrol = clear()
leftmeta = leftalt
leftalt = layer(meta)
rightalt = layer(altgr_)
rightcontrol = compose

# MARK: [shift]
[shift]

# For when keeping Shift down a bit too long while typing `I'm`
n = '
#'

# MARK: [control]
[control]

` = C-`
1 = C-1
2 = C-2
4 = C-4
5 = C-5
6 = C-6
7 = C-7
- = C--
= = C-=

tab = C-tab
q = C-a
w = C-w
e = C-e
r = C-r
t = C-t
y = C-y
u = C-u
i = C-i
o = C-o
p = C-p
[ = C-[
] = C-]
\ = C-\

a = C-a
s = C-s
d = C-d
f = C-f
g = C-g
h = C-h
j = C-j
k = C-k
l = C-l
; = C-;

z = C-z
x = C-x
c = C-c
v = C-v
b = C-b
n = C-n
m = C-m
, = C-,
. = C-.
/ = C-/

# MARK: [control+shift]
[control+shift]

# Ctrl+Shift+2wsx (physically Shift+CapsLock+2wsx) don't work, see note at the top of the file

# We need to specify `n` in this layer as it is defined in the `[shift]` layer

n = C-S-n

# MARK: [alt]
[alt]

` = A-S-tab
1 = A-1
2 = A-2
4 = A-4
5 = A-5
6 = A-6
7 = A-7
- = A--
= = A-=

tab = A-tab
q = A-a
w = A-w
e = A-e
r = A-r
t = A-t
y = A-y
u = A-u
i = A-i
o = A-o
p = A-p
[ = A-[
] = A-]
\ = A-\

a = A-a
s = A-s
d = A-d
f = A-f
g = A-g
h = A-h
j = A-j
k = A-k
l = A-l
; = A-;

z = A-z
x = A-x
c = A-c
v = A-v
b = A-b
n = A-n
m = A-m
, = A-,
. = A-.
/ = A-/

# MARK: [meta]
# `meta` is recognised; if we give another name to this layer,
# we'd need to add `:M` after its new name for the `meta` modifier to keep working
[meta]

` = M-S-tab

tab = M-tab
q = <
w = >
e = [
r = ]
u = 7
i = 8
o = 9
p = *
[ = G-S-h
\ = G-[

d = (
f = )
g = :
h = %
j = 4
k = 5
l = 6
; = +

x = {
c = }
v = ;
m = 1
, = 2
. = 3
/ = .

space = 0

# MARK: [meta+shift]
[meta+shift]

u = G-c
i = G-z
o = G-S-c
p = G-d
[ = G-S-d

g = C-S-g
j = G-x
k = G-S-z
l = G-S-x
; = G-S-f

m = G-j
, = G-h
. = G-S-j

space = G-S-f

# MARK:  [altgr_]
# `altgr` would be recognised as a modifier, but we don't need that here, so we add a `_`
# (we don't need the `rightalt down` event; see by running `keyd monitor`)
[altgr_]

3 = capslock
9 = pageup
0 = pagedown

q = &
w = |
e = ?
r = !
t = G-;
y = G-'
#'
u = home
i = up
o = end
\ = G-]

a = G-e
s = G-r
d = -
f = G-t
g = :
h = G-u
j = left
k = down
l = right

z = ~
x = `
c = "
#"
v = ;
b = G-S-l
n = /
m = =
, = $
. = #
/ = @

space = _

# MARK: [altgr_+shift]
[altgr_+shift]

e = G-k
r = G-S-k
t = G-S-;
y = G-S-'
#'

d = G-l

n = \
m = G-S-g
, = G-\

# MARK: [altgr_+control]
[altgr_+control]

9 = C-pageup
0 = C-pagedown

u = C-home
i = C-up
o = C-end

j = C-left
k = C-down
l = C-right

# MARK: [altgr_+alt]
[altgr_+alt]

9 = A-pageup
0 = A-pagedown

u = A-home
i = A-up
o = A-end

j = A-left
k = A-down
l = A-right

# MARK: [meta+altgr_]
[meta+altgr_]

# Meta+AltGr+gh'bn/ (physically Alt+AltGr+gh'bn/) don't work, see note at the top of the file

9 = C-pageup
0 = C-pagedown

q = macro(< > left)
e = macro([ ] left)
u = C-home
i = C-up
o = C-end

d = macro(( ) left)
f = macro(= >)
j = C-left
k = C-down
l = C-right
; = macro(G-v \ _ ( G-S-v ) _ / G-v)

x = macro({ } left)
m = macro(= = =)
, = macro(: - ))
. = macro(; - ))

# MARK: [meta+altgr_+shift]
[meta+altgr_+shift]

u = C-S-home
i = C-S-up
o = C-S-end

j = C-S-left
k = C-S-down
l = C-S-right

m = G-g

# MARK: [tab]
[tab]

2 = delete
3 = backspace
4 = enter

q = f1
w = f4
e = S-f3
r = f3
t = f5

a = f6
s = f7
d = C-A-1
f = f2
z = f8
x = f9
c = f10
v = f11
b = f12

space = toggle(half)

# MARK: [altgr_+tab]
[altgr_+tab]

u = macro(C-pageup)
i = macro(C-k C-up)
o = macro(C-pagedown)

j = macro(C-k C-left)
k = macro(C-k C-down)
l = macro(C-k C-right)

# MARK: [altgr_+tab+shift]
[altgr_+tab+shift]

u = macro(C-S-pageup)
i = macro(C-k C-S-up)
o = macro(C-S-pagedown)

j = macro(C-k C-S-left)
k = macro(C-k C-S-down)
l = macro(C-k C-S-right)

# MARK: [half]
[half]

capslock = oneshot(shift)

leftmeta = layer(altgr_)
space = overload(reversed, space)

# MARK: [reversed]
[reversed]

tab = m
q = f
w = l
e = d
r = v
t = z

capslock = oneshot(shift)
a = n
s = r
d = s
f = t
g = c

leftshift = j
z = h
x = g
c = q
v = '
#'

leftmeta = toggle(reversed+altgr_)
leftalt = toggle(reversed+meta)

# MARK: [reversed+meta]
[reversed+meta]

w = 7
e = 8
r = 9
t = *

s = 4
d = 5
f = 6
g = +

z = 1
x = 2
c = 3

space = overload(reversed, 0)

# MARK: [reversed+altgr_]
[reversed+altgr_]

w = home
e = up
r = end

s = left
d = down
f = right
g = G-u

z = @
x = $
c = =
v = /

space = overload(reversed, _)
